// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int             @id @default(autoincrement())
  display_name     String
  avatarUrl        String?
  email            String          @unique
  followers        Int?            @default(0)
  isPremium        Boolean         @default(false)
  accessToken      String
  refreshToken     String
  artists          Json?
  friendRequests   FriendRequest[] @relation("FriendRequestFrom")
  friendReceives   FriendRequest[] @relation("FriendRequestTo")
  messagesSent     Message[]       @relation("SentMessages")
  messagesReceived Message[]       @relation("ReceivedMessages")
  created_at       DateTime        @default(now())
}

model Message {
  id         Int      @id @default(autoincrement())
  fromId     Int
  toId       Int
  from       User     @relation("SentMessages", fields: [fromId], references: [id])
  to         User     @relation("ReceivedMessages", fields: [toId], references: [id])
  message    String
  created_at DateTime @default(now())
}

model FriendRequest {
  id         Int      @id @default(autoincrement())
  fromId     Int
  toId       Int
  from       User     @relation("FriendRequestFrom", fields: [fromId], references: [id])
  to         User     @relation("FriendRequestTo", fields: [toId], references: [id])
  created_at DateTime @default(now())

  @@unique([fromId, toId])
}
