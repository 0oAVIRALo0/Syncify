// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     Int             @id @default(autoincrement())
  spotifyId              String          @unique
  displayName            String
  avatarUrl              String?
  email                  String          @unique
  profile                Profile?
  tokens                 Tokens?
  friendRequestsSent     FriendRequest[] @relation("SenderRequests")
  friendRequestsReceived FriendRequest[] @relation("ReceiverRequests")
  created_at             DateTime        @default(now())
}

model Profile {
  id               Int      @id @default(autoincrement())
  user             User     @relation(fields: [userId], references: [id])
  userId           Int      @unique
  bio              String?
  location         String?
  spotifyFollowers Int?     @default(0)
  isPremium        Boolean? @default(false)
}

model Tokens {
  id           Int    @id @default(autoincrement())
  user         User   @relation(fields: [userId], references: [id])
  userId       Int    @unique
  accessToken  String
  refreshToken String
}

model FriendRequest {
  id         Int    @id @default(autoincrement())
  sender     User   @relation("SenderRequests", fields: [senderId], references: [id])
  receiver   User   @relation("ReceiverRequests", fields: [receiverId], references: [id])
  senderId   Int
  receiverId Int
  status     String @default("pending")

  @@unique([senderId, receiverId])
}
